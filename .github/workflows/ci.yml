name: CI Pipeline

on:
  push:
    branches:
      - develop
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd book-app
          npm install

      #- name: Set permissions and reinstall dependencies
      #  run: |
      #    sudo chmod -R 755 ./node_modules/.bin
      #    npm install    

      - name: Run lint
        run: |
          cd book-app
          npm install  # Asegura que las dependencias estén instaladas
          chmod +x ./node_modules/.bin/eslint  # Configura permisos de ejecución
          ./node_modules/.bin/eslint .

      - name: Run tests whit coverage
        run: |
          cd book-app
          npm install  # Asegura que las dependencias estén instaladas
          chmod +x ./node_modules/.bin/jest  # Configura permisos de ejecución para Jest
          ./node_modules/.bin/jest --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: book-app/coverage
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          token: ${{ secrets.CODEQL_TOKEN }}    

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"
          token: ${{ secrets.CODEQL_TOKEN }}
          
      - name: Snyk Security Scan
        run: |
          npm install -g snyk
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk test   

      - name: Build Docker image
        run: docker build -t book-app:latest .

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag book-app:latest <tu-usuario>/book-app:latest
          docker push <tu-usuario>/book-app:latest
